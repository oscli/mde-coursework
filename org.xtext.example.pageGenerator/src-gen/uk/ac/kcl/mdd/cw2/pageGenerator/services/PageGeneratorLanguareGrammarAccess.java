/*
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.mdd.cw2.pageGenerator.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PageGeneratorLanguareGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class WebPageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.WebPage");
		private final Assignment cPageElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPageElementsPageElementParserRuleCall_0 = (RuleCall)cPageElementsAssignment.eContents().get(0);
		
		//WebPage:
		//	pageElements+=pageElement*;
		@Override public ParserRule getRule() { return rule; }
		
		//pageElements+=pageElement*
		public Assignment getPageElementsAssignment() { return cPageElementsAssignment; }
		
		//pageElement
		public RuleCall getPageElementsPageElementParserRuleCall_0() { return cPageElementsPageElementParserRuleCall_0; }
	}
	public class PageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.pageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSizeDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColourRGBParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBodyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cHeadParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStringDeclarationParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//pageElement:
		//	SizeDeclaration | ColourRGB | Body | Head | stringDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//SizeDeclaration | ColourRGB | Body | Head | stringDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SizeDeclaration
		public RuleCall getSizeDeclarationParserRuleCall_0() { return cSizeDeclarationParserRuleCall_0; }
		
		//ColourRGB
		public RuleCall getColourRGBParserRuleCall_1() { return cColourRGBParserRuleCall_1; }
		
		//Body
		public RuleCall getBodyParserRuleCall_2() { return cBodyParserRuleCall_2; }
		
		//Head
		public RuleCall getHeadParserRuleCall_3() { return cHeadParserRuleCall_3; }
		
		//stringDeclaration
		public RuleCall getStringDeclarationParserRuleCall_4() { return cStringDeclarationParserRuleCall_4; }
	}
	public class HeadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Head");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHeadAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHeadKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHeadElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHeadElementsHeadElementParserRuleCall_3_0 = (RuleCall)cHeadElementsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Head:
		//	{Head}
		//	'Head' '{'
		//	headElements+=headElement*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Head}
		//'Head' '{'
		//headElements+=headElement*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Head}
		public Action getHeadAction_0() { return cHeadAction_0; }
		
		//'Head'
		public Keyword getHeadKeyword_1() { return cHeadKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//headElements+=headElement*
		public Assignment getHeadElementsAssignment_3() { return cHeadElementsAssignment_3; }
		
		//headElement
		public RuleCall getHeadElementsHeadElementParserRuleCall_3_0() { return cHeadElementsHeadElementParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class HeadElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.headElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTitleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLabelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//headElement:
		//	Title | Label;
		@Override public ParserRule getRule() { return rule; }
		
		//Title | Label
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Title
		public RuleCall getTitleParserRuleCall_0() { return cTitleParserRuleCall_0; }
		
		//Label
		public RuleCall getLabelParserRuleCall_1() { return cLabelParserRuleCall_1; }
	}
	public class TitleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Title");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTitleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Title:
		//	'Title' '=' name=STRING ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Title' '=' name=STRING ';'
		public Group getGroup() { return cGroup; }
		
		//'Title'
		public Keyword getTitleKeyword_0() { return cTitleKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class LabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Label");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLableKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLabelAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLabelSTRINGTerminalRuleCall_6_0 = (RuleCall)cLabelAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Label:
		//	'Description' '=' name=STRING ',' 'lable' '=' label=STRING ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Description' '=' name=STRING ',' 'lable' '=' label=STRING ';'
		public Group getGroup() { return cGroup; }
		
		//'Description'
		public Keyword getDescriptionKeyword_0() { return cDescriptionKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//'lable'
		public Keyword getLableKeyword_4() { return cLableKeyword_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }
		
		//label=STRING
		public Assignment getLabelAssignment_6() { return cLabelAssignment_6; }
		
		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_6_0() { return cLabelSTRINGTerminalRuleCall_6_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class BodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Body");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBodyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBodyElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyElementsBodyElementParserRuleCall_3_0 = (RuleCall)cBodyElementsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Body:
		//	{Body}
		//	'Body' '{'
		//	bodyElements+=bodyElement*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Body}
		//'Body' '{'
		//bodyElements+=bodyElement*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Body}
		public Action getBodyAction_0() { return cBodyAction_0; }
		
		//'Body'
		public Keyword getBodyKeyword_1() { return cBodyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//bodyElements+=bodyElement*
		public Assignment getBodyElementsAssignment_3() { return cBodyElementsAssignment_3; }
		
		//bodyElement
		public RuleCall getBodyElementsBodyElementParserRuleCall_3_0() { return cBodyElementsBodyElementParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class BodyElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.bodyElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHeadingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLinkParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPictureParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSectionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSizeDeclarationParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cColourRGBParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cStringDeclarationParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//bodyElement:
		//	Heading | Link | Text | Picture | Section | SizeDeclaration | ColourRGB | stringDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//Heading | Link | Text | Picture | Section | SizeDeclaration | ColourRGB | stringDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Heading
		public RuleCall getHeadingParserRuleCall_0() { return cHeadingParserRuleCall_0; }
		
		//Link
		public RuleCall getLinkParserRuleCall_1() { return cLinkParserRuleCall_1; }
		
		//Text
		public RuleCall getTextParserRuleCall_2() { return cTextParserRuleCall_2; }
		
		//Picture
		public RuleCall getPictureParserRuleCall_3() { return cPictureParserRuleCall_3; }
		
		//Section
		public RuleCall getSectionParserRuleCall_4() { return cSectionParserRuleCall_4; }
		
		//SizeDeclaration
		public RuleCall getSizeDeclarationParserRuleCall_5() { return cSizeDeclarationParserRuleCall_5; }
		
		//ColourRGB
		public RuleCall getColourRGBParserRuleCall_6() { return cColourRGBParserRuleCall_6; }
		
		//stringDeclaration
		public RuleCall getStringDeclarationParserRuleCall_7() { return cStringDeclarationParserRuleCall_7; }
	}
	public class HeadingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Heading");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHeadingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIndexKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIndexAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIndexINTTerminalRuleCall_5_0 = (RuleCall)cIndexAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cFontColourKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cFontColorAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cFontColorPrimaryColourParserRuleCall_7_2_0 = (RuleCall)cFontColorAssignment_7_2.eContents().get(0);
		private final Keyword cCommaKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLocationKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cLocationAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cLocationLocationexpressionParserRuleCall_8_2_0 = (RuleCall)cLocationAssignment_8_2.eContents().get(0);
		private final Keyword cCommaKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPaddingLeftKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cLpaddingAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cLpaddingINTTerminalRuleCall_9_2_0 = (RuleCall)cLpaddingAssignment_9_2.eContents().get(0);
		private final Keyword cCommaKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPaddingRightKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cRpaddingAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cRpaddingINTTerminalRuleCall_10_2_0 = (RuleCall)cRpaddingAssignment_10_2.eContents().get(0);
		private final Keyword cCommaKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cPaddingTopKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cEqualsSignKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cTpaddingAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cTpaddingINTTerminalRuleCall_11_2_0 = (RuleCall)cTpaddingAssignment_11_2.eContents().get(0);
		private final Keyword cCommaKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cPaddingBottomKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cBpaddingAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cBpaddingINTTerminalRuleCall_12_2_0 = (RuleCall)cBpaddingAssignment_12_2.eContents().get(0);
		private final Keyword cCommaKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cEqualsSignKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cTitleAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cTitleSTRINGTerminalRuleCall_15_0 = (RuleCall)cTitleAssignment_15.eContents().get(0);
		private final Keyword cSemicolonKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Heading:
		//	'Heading' name=ID '<'
		//	'index' '=' index=INT ','? ('Font-colour' '=' fontColor=primaryColour ','?)? ('Location' '='
		//	location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? (
		//	'Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
		//	'>'
		//	'=' title=STRING ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Heading' name=ID '<'
		//'index' '=' index=INT ','? ('Font-colour' '=' fontColor=primaryColour ','?)? ('Location' '=' location=locationexpression
		//','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? ('Padding-top' '=' Tpadding=INT
		//','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
		//'>'
		//'=' title=STRING ';'
		public Group getGroup() { return cGroup; }
		
		//'Heading'
		public Keyword getHeadingKeyword_0() { return cHeadingKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//'index'
		public Keyword getIndexKeyword_3() { return cIndexKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//index=INT
		public Assignment getIndexAssignment_5() { return cIndexAssignment_5; }
		
		//INT
		public RuleCall getIndexINTTerminalRuleCall_5_0() { return cIndexINTTerminalRuleCall_5_0; }
		
		//','?
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//('Font-colour' '=' fontColor=primaryColour ','?)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Font-colour'
		public Keyword getFontColourKeyword_7_0() { return cFontColourKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//fontColor=primaryColour
		public Assignment getFontColorAssignment_7_2() { return cFontColorAssignment_7_2; }
		
		//primaryColour
		public RuleCall getFontColorPrimaryColourParserRuleCall_7_2_0() { return cFontColorPrimaryColourParserRuleCall_7_2_0; }
		
		//','?
		public Keyword getCommaKeyword_7_3() { return cCommaKeyword_7_3; }
		
		//('Location' '=' location=locationexpression ','?)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Location'
		public Keyword getLocationKeyword_8_0() { return cLocationKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//location=locationexpression
		public Assignment getLocationAssignment_8_2() { return cLocationAssignment_8_2; }
		
		//locationexpression
		public RuleCall getLocationLocationexpressionParserRuleCall_8_2_0() { return cLocationLocationexpressionParserRuleCall_8_2_0; }
		
		//','?
		public Keyword getCommaKeyword_8_3() { return cCommaKeyword_8_3; }
		
		//('Padding-left' '=' Lpadding=INT ','?)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'Padding-left'
		public Keyword getPaddingLeftKeyword_9_0() { return cPaddingLeftKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//Lpadding=INT
		public Assignment getLpaddingAssignment_9_2() { return cLpaddingAssignment_9_2; }
		
		//INT
		public RuleCall getLpaddingINTTerminalRuleCall_9_2_0() { return cLpaddingINTTerminalRuleCall_9_2_0; }
		
		//','?
		public Keyword getCommaKeyword_9_3() { return cCommaKeyword_9_3; }
		
		//('Padding-right' '=' Rpadding=INT ','?)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'Padding-right'
		public Keyword getPaddingRightKeyword_10_0() { return cPaddingRightKeyword_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }
		
		//Rpadding=INT
		public Assignment getRpaddingAssignment_10_2() { return cRpaddingAssignment_10_2; }
		
		//INT
		public RuleCall getRpaddingINTTerminalRuleCall_10_2_0() { return cRpaddingINTTerminalRuleCall_10_2_0; }
		
		//','?
		public Keyword getCommaKeyword_10_3() { return cCommaKeyword_10_3; }
		
		//('Padding-top' '=' Tpadding=INT ','?)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'Padding-top'
		public Keyword getPaddingTopKeyword_11_0() { return cPaddingTopKeyword_11_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_11_1() { return cEqualsSignKeyword_11_1; }
		
		//Tpadding=INT
		public Assignment getTpaddingAssignment_11_2() { return cTpaddingAssignment_11_2; }
		
		//INT
		public RuleCall getTpaddingINTTerminalRuleCall_11_2_0() { return cTpaddingINTTerminalRuleCall_11_2_0; }
		
		//','?
		public Keyword getCommaKeyword_11_3() { return cCommaKeyword_11_3; }
		
		//('Padding-bottom' '=' Bpadding=INT ','?)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'Padding-bottom'
		public Keyword getPaddingBottomKeyword_12_0() { return cPaddingBottomKeyword_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_12_1() { return cEqualsSignKeyword_12_1; }
		
		//Bpadding=INT
		public Assignment getBpaddingAssignment_12_2() { return cBpaddingAssignment_12_2; }
		
		//INT
		public RuleCall getBpaddingINTTerminalRuleCall_12_2_0() { return cBpaddingINTTerminalRuleCall_12_2_0; }
		
		//','?
		public Keyword getCommaKeyword_12_3() { return cCommaKeyword_12_3; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_13() { return cGreaterThanSignKeyword_13; }
		
		//'='
		public Keyword getEqualsSignKeyword_14() { return cEqualsSignKeyword_14; }
		
		//title=STRING
		public Assignment getTitleAssignment_15() { return cTitleAssignment_15; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_15_0() { return cTitleSTRINGTerminalRuleCall_15_0; }
		
		//';'
		public Keyword getSemicolonKeyword_16() { return cSemicolonKeyword_16; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTargetKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTargetAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTargetSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cTargetAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPaddingLeftKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cLpaddingAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cLpaddingINTTerminalRuleCall_4_2_0 = (RuleCall)cLpaddingAssignment_4_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPaddingRightKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cRpaddingAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cRpaddingINTTerminalRuleCall_5_2_0 = (RuleCall)cRpaddingAssignment_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPaddingTopKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cTpaddingAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cTpaddingINTTerminalRuleCall_6_2_0 = (RuleCall)cTpaddingAssignment_6_2.eContents().get(0);
		private final Keyword cCommaKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPaddingBottomKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cBpaddingAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cBpaddingINTTerminalRuleCall_7_2_0 = (RuleCall)cBpaddingAssignment_7_2.eContents().get(0);
		private final Keyword cCommaKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cFontColourKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cFontColorAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cFontColorPrimaryColourParserRuleCall_8_2_0 = (RuleCall)cFontColorAssignment_8_2.eContents().get(0);
		private final Keyword cCommaKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cFontSizeKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cFontSizeAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cFontSizeINTTerminalRuleCall_9_2_0 = (RuleCall)cFontSizeAssignment_9_2.eContents().get(0);
		private final Keyword cCommaKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cLocationKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cLocationAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cLocationLocationexpressionParserRuleCall_10_2_0 = (RuleCall)cLocationAssignment_10_2.eContents().get(0);
		private final Keyword cCommaKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cUrlAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cUrlSTRINGTerminalRuleCall_13_0 = (RuleCall)cUrlAssignment_13.eContents().get(0);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Link:
		//	'Link' name=ID '<' ('target' '=' target=STRING ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '='
		//	Rpadding=INT ','?)? ('Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)? ('Font-colour' '='
		//	fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)? ('Location' '=' location=locationexpression ','?)?
		//	'>'
		//	'=' url=STRING ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Link' name=ID '<' ('target' '=' target=STRING ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '='
		//Rpadding=INT ','?)? ('Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)? ('Font-colour' '='
		//fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)? ('Location' '=' location=locationexpression ','?)?
		//'>'
		//'=' url=STRING ';'
		public Group getGroup() { return cGroup; }
		
		//'Link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//('target' '=' target=STRING ','?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'target'
		public Keyword getTargetKeyword_3_0() { return cTargetKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//target=STRING
		public Assignment getTargetAssignment_3_2() { return cTargetAssignment_3_2; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_3_2_0() { return cTargetSTRINGTerminalRuleCall_3_2_0; }
		
		//','?
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }
		
		//('Padding-left' '=' Lpadding=INT ','?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Padding-left'
		public Keyword getPaddingLeftKeyword_4_0() { return cPaddingLeftKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//Lpadding=INT
		public Assignment getLpaddingAssignment_4_2() { return cLpaddingAssignment_4_2; }
		
		//INT
		public RuleCall getLpaddingINTTerminalRuleCall_4_2_0() { return cLpaddingINTTerminalRuleCall_4_2_0; }
		
		//','?
		public Keyword getCommaKeyword_4_3() { return cCommaKeyword_4_3; }
		
		//('Padding-right' '=' Rpadding=INT ','?)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Padding-right'
		public Keyword getPaddingRightKeyword_5_0() { return cPaddingRightKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//Rpadding=INT
		public Assignment getRpaddingAssignment_5_2() { return cRpaddingAssignment_5_2; }
		
		//INT
		public RuleCall getRpaddingINTTerminalRuleCall_5_2_0() { return cRpaddingINTTerminalRuleCall_5_2_0; }
		
		//','?
		public Keyword getCommaKeyword_5_3() { return cCommaKeyword_5_3; }
		
		//('Padding-top' '=' Tpadding=INT ','?)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Padding-top'
		public Keyword getPaddingTopKeyword_6_0() { return cPaddingTopKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//Tpadding=INT
		public Assignment getTpaddingAssignment_6_2() { return cTpaddingAssignment_6_2; }
		
		//INT
		public RuleCall getTpaddingINTTerminalRuleCall_6_2_0() { return cTpaddingINTTerminalRuleCall_6_2_0; }
		
		//','?
		public Keyword getCommaKeyword_6_3() { return cCommaKeyword_6_3; }
		
		//('Padding-bottom' '=' Bpadding=INT ','?)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Padding-bottom'
		public Keyword getPaddingBottomKeyword_7_0() { return cPaddingBottomKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//Bpadding=INT
		public Assignment getBpaddingAssignment_7_2() { return cBpaddingAssignment_7_2; }
		
		//INT
		public RuleCall getBpaddingINTTerminalRuleCall_7_2_0() { return cBpaddingINTTerminalRuleCall_7_2_0; }
		
		//','?
		public Keyword getCommaKeyword_7_3() { return cCommaKeyword_7_3; }
		
		//('Font-colour' '=' fontColor=primaryColour ','?)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Font-colour'
		public Keyword getFontColourKeyword_8_0() { return cFontColourKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//fontColor=primaryColour
		public Assignment getFontColorAssignment_8_2() { return cFontColorAssignment_8_2; }
		
		//primaryColour
		public RuleCall getFontColorPrimaryColourParserRuleCall_8_2_0() { return cFontColorPrimaryColourParserRuleCall_8_2_0; }
		
		//','?
		public Keyword getCommaKeyword_8_3() { return cCommaKeyword_8_3; }
		
		//('Font-size' '=' fontSize=INT ','?)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'Font-size'
		public Keyword getFontSizeKeyword_9_0() { return cFontSizeKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//fontSize=INT
		public Assignment getFontSizeAssignment_9_2() { return cFontSizeAssignment_9_2; }
		
		//INT
		public RuleCall getFontSizeINTTerminalRuleCall_9_2_0() { return cFontSizeINTTerminalRuleCall_9_2_0; }
		
		//','?
		public Keyword getCommaKeyword_9_3() { return cCommaKeyword_9_3; }
		
		//('Location' '=' location=locationexpression ','?)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'Location'
		public Keyword getLocationKeyword_10_0() { return cLocationKeyword_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }
		
		//location=locationexpression
		public Assignment getLocationAssignment_10_2() { return cLocationAssignment_10_2; }
		
		//locationexpression
		public RuleCall getLocationLocationexpressionParserRuleCall_10_2_0() { return cLocationLocationexpressionParserRuleCall_10_2_0; }
		
		//','?
		public Keyword getCommaKeyword_10_3() { return cCommaKeyword_10_3; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_11() { return cGreaterThanSignKeyword_11; }
		
		//'='
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }
		
		//url=STRING
		public Assignment getUrlAssignment_13() { return cUrlAssignment_13; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_13_0() { return cUrlSTRINGTerminalRuleCall_13_0; }
		
		//';'
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
	}
	public class PictureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Picture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPictureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSizeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cSizeAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cSizePrimarySizeParserRuleCall_3_2_0 = (RuleCall)cSizeAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAlternativeTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAltAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAltSTRINGTerminalRuleCall_4_2_0 = (RuleCall)cAltAssignment_4_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLocationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLocationAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLocationLocationexpressionParserRuleCall_5_2_0 = (RuleCall)cLocationAssignment_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPaddingLeftKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cLpaddingAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cLpaddingINTTerminalRuleCall_6_2_0 = (RuleCall)cLpaddingAssignment_6_2.eContents().get(0);
		private final Keyword cCommaKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPaddingRightKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cRpaddingAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cRpaddingINTTerminalRuleCall_7_2_0 = (RuleCall)cRpaddingAssignment_7_2.eContents().get(0);
		private final Keyword cCommaKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPaddingTopKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cTpaddingAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cTpaddingINTTerminalRuleCall_8_2_0 = (RuleCall)cTpaddingAssignment_8_2.eContents().get(0);
		private final Keyword cCommaKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPaddingBottomKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cBpaddingAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cBpaddingINTTerminalRuleCall_9_2_0 = (RuleCall)cBpaddingAssignment_9_2.eContents().get(0);
		private final Keyword cCommaKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cEqualsSignKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cPicUrlAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cPicUrlSTRINGTerminalRuleCall_12_0 = (RuleCall)cPicUrlAssignment_12.eContents().get(0);
		private final Keyword cCommaKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Picture:
		//	'Picture' name=ID '<' ('size' '=' size=primarySize ','?)? ('alternative-text' '=' alt=STRING ','?)? ('Location' '='
		//	location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? (
		//	'Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
		//	'>'
		//	'=' picUrl=STRING ','? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Picture' name=ID '<' ('size' '=' size=primarySize ','?)? ('alternative-text' '=' alt=STRING ','?)? ('Location' '='
		//location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? (
		//'Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
		//'>'
		//'=' picUrl=STRING ','? ';'
		public Group getGroup() { return cGroup; }
		
		//'Picture'
		public Keyword getPictureKeyword_0() { return cPictureKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//('size' '=' size=primarySize ','?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'size'
		public Keyword getSizeKeyword_3_0() { return cSizeKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//size=primarySize
		public Assignment getSizeAssignment_3_2() { return cSizeAssignment_3_2; }
		
		//primarySize
		public RuleCall getSizePrimarySizeParserRuleCall_3_2_0() { return cSizePrimarySizeParserRuleCall_3_2_0; }
		
		//','?
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }
		
		//('alternative-text' '=' alt=STRING ','?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'alternative-text'
		public Keyword getAlternativeTextKeyword_4_0() { return cAlternativeTextKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//alt=STRING
		public Assignment getAltAssignment_4_2() { return cAltAssignment_4_2; }
		
		//STRING
		public RuleCall getAltSTRINGTerminalRuleCall_4_2_0() { return cAltSTRINGTerminalRuleCall_4_2_0; }
		
		//','?
		public Keyword getCommaKeyword_4_3() { return cCommaKeyword_4_3; }
		
		//('Location' '=' location=locationexpression ','?)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Location'
		public Keyword getLocationKeyword_5_0() { return cLocationKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//location=locationexpression
		public Assignment getLocationAssignment_5_2() { return cLocationAssignment_5_2; }
		
		//locationexpression
		public RuleCall getLocationLocationexpressionParserRuleCall_5_2_0() { return cLocationLocationexpressionParserRuleCall_5_2_0; }
		
		//','?
		public Keyword getCommaKeyword_5_3() { return cCommaKeyword_5_3; }
		
		//('Padding-left' '=' Lpadding=INT ','?)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Padding-left'
		public Keyword getPaddingLeftKeyword_6_0() { return cPaddingLeftKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//Lpadding=INT
		public Assignment getLpaddingAssignment_6_2() { return cLpaddingAssignment_6_2; }
		
		//INT
		public RuleCall getLpaddingINTTerminalRuleCall_6_2_0() { return cLpaddingINTTerminalRuleCall_6_2_0; }
		
		//','?
		public Keyword getCommaKeyword_6_3() { return cCommaKeyword_6_3; }
		
		//('Padding-right' '=' Rpadding=INT ','?)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Padding-right'
		public Keyword getPaddingRightKeyword_7_0() { return cPaddingRightKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//Rpadding=INT
		public Assignment getRpaddingAssignment_7_2() { return cRpaddingAssignment_7_2; }
		
		//INT
		public RuleCall getRpaddingINTTerminalRuleCall_7_2_0() { return cRpaddingINTTerminalRuleCall_7_2_0; }
		
		//','?
		public Keyword getCommaKeyword_7_3() { return cCommaKeyword_7_3; }
		
		//('Padding-top' '=' Tpadding=INT ','?)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Padding-top'
		public Keyword getPaddingTopKeyword_8_0() { return cPaddingTopKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//Tpadding=INT
		public Assignment getTpaddingAssignment_8_2() { return cTpaddingAssignment_8_2; }
		
		//INT
		public RuleCall getTpaddingINTTerminalRuleCall_8_2_0() { return cTpaddingINTTerminalRuleCall_8_2_0; }
		
		//','?
		public Keyword getCommaKeyword_8_3() { return cCommaKeyword_8_3; }
		
		//('Padding-bottom' '=' Bpadding=INT ','?)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'Padding-bottom'
		public Keyword getPaddingBottomKeyword_9_0() { return cPaddingBottomKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//Bpadding=INT
		public Assignment getBpaddingAssignment_9_2() { return cBpaddingAssignment_9_2; }
		
		//INT
		public RuleCall getBpaddingINTTerminalRuleCall_9_2_0() { return cBpaddingINTTerminalRuleCall_9_2_0; }
		
		//','?
		public Keyword getCommaKeyword_9_3() { return cCommaKeyword_9_3; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_10() { return cGreaterThanSignKeyword_10; }
		
		//'='
		public Keyword getEqualsSignKeyword_11() { return cEqualsSignKeyword_11; }
		
		//picUrl=STRING
		public Assignment getPicUrlAssignment_12() { return cPicUrlAssignment_12; }
		
		//STRING
		public RuleCall getPicUrlSTRINGTerminalRuleCall_12_0() { return cPicUrlSTRINGTerminalRuleCall_12_0; }
		
		//','?
		public Keyword getCommaKeyword_13() { return cCommaKeyword_13; }
		
		//';'
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
	}
	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Text");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFontColourKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cFontColorAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cFontColorPrimaryColourParserRuleCall_3_2_0 = (RuleCall)cFontColorAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFontSizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cFontSizeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cFontSizeINTTerminalRuleCall_4_2_0 = (RuleCall)cFontSizeAssignment_4_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLocationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLocationAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLocationLocationexpressionParserRuleCall_5_2_0 = (RuleCall)cLocationAssignment_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPaddingLeftKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cLpaddingAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cLpaddingINTTerminalRuleCall_6_2_0 = (RuleCall)cLpaddingAssignment_6_2.eContents().get(0);
		private final Keyword cCommaKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPaddingRightKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cRpaddingAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cRpaddingINTTerminalRuleCall_7_2_0 = (RuleCall)cRpaddingAssignment_7_2.eContents().get(0);
		private final Keyword cCommaKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPaddingTopKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cTpaddingAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cTpaddingINTTerminalRuleCall_8_2_0 = (RuleCall)cTpaddingAssignment_8_2.eContents().get(0);
		private final Keyword cCommaKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPaddingBottomKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cBpaddingAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cBpaddingINTTerminalRuleCall_9_2_0 = (RuleCall)cBpaddingAssignment_9_2.eContents().get(0);
		private final Keyword cCommaKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cEqualsSignKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cContentAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cContentContentParserRuleCall_12_0 = (RuleCall)cContentAssignment_12.eContents().get(0);
		private final Keyword cSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Text:
		//	'Text' name=ID '<' ('Font-colour' '=' fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)? ('Location'
		//	'=' location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)
		//	? ('Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
		//	'>'
		//	'=' content=Content ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Text' name=ID '<' ('Font-colour' '=' fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)? ('Location' '='
		//location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? (
		//'Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
		//'>'
		//'=' content=Content ';'
		public Group getGroup() { return cGroup; }
		
		//'Text'
		public Keyword getTextKeyword_0() { return cTextKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//('Font-colour' '=' fontColor=primaryColour ','?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Font-colour'
		public Keyword getFontColourKeyword_3_0() { return cFontColourKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//fontColor=primaryColour
		public Assignment getFontColorAssignment_3_2() { return cFontColorAssignment_3_2; }
		
		//primaryColour
		public RuleCall getFontColorPrimaryColourParserRuleCall_3_2_0() { return cFontColorPrimaryColourParserRuleCall_3_2_0; }
		
		//','?
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }
		
		//('Font-size' '=' fontSize=INT ','?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Font-size'
		public Keyword getFontSizeKeyword_4_0() { return cFontSizeKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//fontSize=INT
		public Assignment getFontSizeAssignment_4_2() { return cFontSizeAssignment_4_2; }
		
		//INT
		public RuleCall getFontSizeINTTerminalRuleCall_4_2_0() { return cFontSizeINTTerminalRuleCall_4_2_0; }
		
		//','?
		public Keyword getCommaKeyword_4_3() { return cCommaKeyword_4_3; }
		
		//('Location' '=' location=locationexpression ','?)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Location'
		public Keyword getLocationKeyword_5_0() { return cLocationKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//location=locationexpression
		public Assignment getLocationAssignment_5_2() { return cLocationAssignment_5_2; }
		
		//locationexpression
		public RuleCall getLocationLocationexpressionParserRuleCall_5_2_0() { return cLocationLocationexpressionParserRuleCall_5_2_0; }
		
		//','?
		public Keyword getCommaKeyword_5_3() { return cCommaKeyword_5_3; }
		
		//('Padding-left' '=' Lpadding=INT ','?)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Padding-left'
		public Keyword getPaddingLeftKeyword_6_0() { return cPaddingLeftKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//Lpadding=INT
		public Assignment getLpaddingAssignment_6_2() { return cLpaddingAssignment_6_2; }
		
		//INT
		public RuleCall getLpaddingINTTerminalRuleCall_6_2_0() { return cLpaddingINTTerminalRuleCall_6_2_0; }
		
		//','?
		public Keyword getCommaKeyword_6_3() { return cCommaKeyword_6_3; }
		
		//('Padding-right' '=' Rpadding=INT ','?)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Padding-right'
		public Keyword getPaddingRightKeyword_7_0() { return cPaddingRightKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//Rpadding=INT
		public Assignment getRpaddingAssignment_7_2() { return cRpaddingAssignment_7_2; }
		
		//INT
		public RuleCall getRpaddingINTTerminalRuleCall_7_2_0() { return cRpaddingINTTerminalRuleCall_7_2_0; }
		
		//','?
		public Keyword getCommaKeyword_7_3() { return cCommaKeyword_7_3; }
		
		//('Padding-top' '=' Tpadding=INT ','?)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Padding-top'
		public Keyword getPaddingTopKeyword_8_0() { return cPaddingTopKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//Tpadding=INT
		public Assignment getTpaddingAssignment_8_2() { return cTpaddingAssignment_8_2; }
		
		//INT
		public RuleCall getTpaddingINTTerminalRuleCall_8_2_0() { return cTpaddingINTTerminalRuleCall_8_2_0; }
		
		//','?
		public Keyword getCommaKeyword_8_3() { return cCommaKeyword_8_3; }
		
		//('Padding-bottom' '=' Bpadding=INT ','?)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'Padding-bottom'
		public Keyword getPaddingBottomKeyword_9_0() { return cPaddingBottomKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//Bpadding=INT
		public Assignment getBpaddingAssignment_9_2() { return cBpaddingAssignment_9_2; }
		
		//INT
		public RuleCall getBpaddingINTTerminalRuleCall_9_2_0() { return cBpaddingINTTerminalRuleCall_9_2_0; }
		
		//','?
		public Keyword getCommaKeyword_9_3() { return cCommaKeyword_9_3; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_10() { return cGreaterThanSignKeyword_10; }
		
		//'='
		public Keyword getEqualsSignKeyword_11() { return cEqualsSignKeyword_11; }
		
		//content=Content
		public Assignment getContentAssignment_12() { return cContentAssignment_12; }
		
		//Content
		public RuleCall getContentContentParserRuleCall_12_0() { return cContentContentParserRuleCall_12_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13() { return cSemicolonKeyword_13; }
	}
	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBackgroundColourKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cBgColorAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cBgColorPrimaryColourParserRuleCall_3_2_0 = (RuleCall)cBgColorAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSizeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSizePrimarySizeParserRuleCall_4_2_0 = (RuleCall)cSizeAssignment_4_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSectionLocationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLocationAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLocationLocationexpressionParserRuleCall_5_2_0 = (RuleCall)cLocationAssignment_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTextLocationKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cTextLocationAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cTextLocationLocationexpressionParserRuleCall_6_2_0 = (RuleCall)cTextLocationAssignment_6_2.eContents().get(0);
		private final Keyword cCommaKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPaddingLeftKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cLpaddingAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cLpaddingINTTerminalRuleCall_7_2_0 = (RuleCall)cLpaddingAssignment_7_2.eContents().get(0);
		private final Keyword cCommaKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPaddingRightKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cRpaddingAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cRpaddingINTTerminalRuleCall_8_2_0 = (RuleCall)cRpaddingAssignment_8_2.eContents().get(0);
		private final Keyword cCommaKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPaddingTopKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cEqualsSignKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cTpaddingAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cTpaddingINTTerminalRuleCall_9_2_0 = (RuleCall)cTpaddingAssignment_9_2.eContents().get(0);
		private final Keyword cCommaKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPaddingBottomKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cBpaddingAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cBpaddingINTTerminalRuleCall_10_2_0 = (RuleCall)cBpaddingAssignment_10_2.eContents().get(0);
		private final Keyword cCommaKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cBodyElementsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cBodyElementsBodyElementParserRuleCall_13_0 = (RuleCall)cBodyElementsAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Section:
		//	'Section' name=ID '<' ('Background-Colour' '=' bgColor=primaryColour ','?)? ('Size' '=' size=primarySize ','?)? (
		//	'Section-location' '=' location=locationexpression ','?)? ('Text-location' '=' textLocation=locationexpression ','?)?
		//	('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? ('Padding-top' '=' Tpadding=INT ','?)
		//	? ('Padding-bottom' '=' Bpadding=INT ','?)?
		//	'>'
		//	'{'
		//	bodyElements+=bodyElement+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Section' name=ID '<' ('Background-Colour' '=' bgColor=primaryColour ','?)? ('Size' '=' size=primarySize ','?)? (
		//'Section-location' '=' location=locationexpression ','?)? ('Text-location' '=' textLocation=locationexpression ','?)? (
		//'Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? ('Padding-top' '=' Tpadding=INT ','?)? (
		//'Padding-bottom' '=' Bpadding=INT ','?)?
		//'>'
		//'{'
		//bodyElements+=bodyElement+
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Section'
		public Keyword getSectionKeyword_0() { return cSectionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//('Background-Colour' '=' bgColor=primaryColour ','?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Background-Colour'
		public Keyword getBackgroundColourKeyword_3_0() { return cBackgroundColourKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//bgColor=primaryColour
		public Assignment getBgColorAssignment_3_2() { return cBgColorAssignment_3_2; }
		
		//primaryColour
		public RuleCall getBgColorPrimaryColourParserRuleCall_3_2_0() { return cBgColorPrimaryColourParserRuleCall_3_2_0; }
		
		//','?
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }
		
		//('Size' '=' size=primarySize ','?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Size'
		public Keyword getSizeKeyword_4_0() { return cSizeKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//size=primarySize
		public Assignment getSizeAssignment_4_2() { return cSizeAssignment_4_2; }
		
		//primarySize
		public RuleCall getSizePrimarySizeParserRuleCall_4_2_0() { return cSizePrimarySizeParserRuleCall_4_2_0; }
		
		//','?
		public Keyword getCommaKeyword_4_3() { return cCommaKeyword_4_3; }
		
		//('Section-location' '=' location=locationexpression ','?)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Section-location'
		public Keyword getSectionLocationKeyword_5_0() { return cSectionLocationKeyword_5_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }
		
		//location=locationexpression
		public Assignment getLocationAssignment_5_2() { return cLocationAssignment_5_2; }
		
		//locationexpression
		public RuleCall getLocationLocationexpressionParserRuleCall_5_2_0() { return cLocationLocationexpressionParserRuleCall_5_2_0; }
		
		//','?
		public Keyword getCommaKeyword_5_3() { return cCommaKeyword_5_3; }
		
		//('Text-location' '=' textLocation=locationexpression ','?)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Text-location'
		public Keyword getTextLocationKeyword_6_0() { return cTextLocationKeyword_6_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }
		
		//textLocation=locationexpression
		public Assignment getTextLocationAssignment_6_2() { return cTextLocationAssignment_6_2; }
		
		//locationexpression
		public RuleCall getTextLocationLocationexpressionParserRuleCall_6_2_0() { return cTextLocationLocationexpressionParserRuleCall_6_2_0; }
		
		//','?
		public Keyword getCommaKeyword_6_3() { return cCommaKeyword_6_3; }
		
		//('Padding-left' '=' Lpadding=INT ','?)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Padding-left'
		public Keyword getPaddingLeftKeyword_7_0() { return cPaddingLeftKeyword_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }
		
		//Lpadding=INT
		public Assignment getLpaddingAssignment_7_2() { return cLpaddingAssignment_7_2; }
		
		//INT
		public RuleCall getLpaddingINTTerminalRuleCall_7_2_0() { return cLpaddingINTTerminalRuleCall_7_2_0; }
		
		//','?
		public Keyword getCommaKeyword_7_3() { return cCommaKeyword_7_3; }
		
		//('Padding-right' '=' Rpadding=INT ','?)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Padding-right'
		public Keyword getPaddingRightKeyword_8_0() { return cPaddingRightKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//Rpadding=INT
		public Assignment getRpaddingAssignment_8_2() { return cRpaddingAssignment_8_2; }
		
		//INT
		public RuleCall getRpaddingINTTerminalRuleCall_8_2_0() { return cRpaddingINTTerminalRuleCall_8_2_0; }
		
		//','?
		public Keyword getCommaKeyword_8_3() { return cCommaKeyword_8_3; }
		
		//('Padding-top' '=' Tpadding=INT ','?)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'Padding-top'
		public Keyword getPaddingTopKeyword_9_0() { return cPaddingTopKeyword_9_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_9_1() { return cEqualsSignKeyword_9_1; }
		
		//Tpadding=INT
		public Assignment getTpaddingAssignment_9_2() { return cTpaddingAssignment_9_2; }
		
		//INT
		public RuleCall getTpaddingINTTerminalRuleCall_9_2_0() { return cTpaddingINTTerminalRuleCall_9_2_0; }
		
		//','?
		public Keyword getCommaKeyword_9_3() { return cCommaKeyword_9_3; }
		
		//('Padding-bottom' '=' Bpadding=INT ','?)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'Padding-bottom'
		public Keyword getPaddingBottomKeyword_10_0() { return cPaddingBottomKeyword_10_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }
		
		//Bpadding=INT
		public Assignment getBpaddingAssignment_10_2() { return cBpaddingAssignment_10_2; }
		
		//INT
		public RuleCall getBpaddingINTTerminalRuleCall_10_2_0() { return cBpaddingINTTerminalRuleCall_10_2_0; }
		
		//','?
		public Keyword getCommaKeyword_10_3() { return cCommaKeyword_10_3; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_11() { return cGreaterThanSignKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//bodyElements+=bodyElement+
		public Assignment getBodyElementsAssignment_13() { return cBodyElementsAssignment_13; }
		
		//bodyElement
		public RuleCall getBodyElementsBodyElementParserRuleCall_13_0() { return cBodyElementsBodyElementParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class LocationexpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.locationexpression");
		private final Assignment cLocationAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cLocationSTRINGTerminalRuleCall_0 = (RuleCall)cLocationAssignment.eContents().get(0);
		
		//locationexpression:
		//	location=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//location=STRING
		public Assignment getLocationAssignment() { return cLocationAssignment; }
		
		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_0() { return cLocationSTRINGTerminalRuleCall_0; }
	}
	public class PrimarySizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.primarySize");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSizeExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSizeValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//primarySize:
		//	SizeExpression | sizeValue;
		@Override public ParserRule getRule() { return rule; }
		
		//SizeExpression | sizeValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SizeExpression
		public RuleCall getSizeExpressionParserRuleCall_0() { return cSizeExpressionParserRuleCall_0; }
		
		//sizeValue
		public RuleCall getSizeValueParserRuleCall_1() { return cSizeValueParserRuleCall_1; }
	}
	public class SizeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.SizeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cWidthAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWidthINTTerminalRuleCall_3_0 = (RuleCall)cWidthAssignment_3.eContents().get(0);
		private final Keyword cAsteriskKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cHeightAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cHeightINTTerminalRuleCall_5_0 = (RuleCall)cHeightAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SizeDeclaration:
		//	'size' name=ID '=' width=INT '*' height=INT ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'size' name=ID '=' width=INT '*' height=INT ';'
		public Group getGroup() { return cGroup; }
		
		//'size'
		public Keyword getSizeKeyword_0() { return cSizeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//width=INT
		public Assignment getWidthAssignment_3() { return cWidthAssignment_3; }
		
		//INT
		public RuleCall getWidthINTTerminalRuleCall_3_0() { return cWidthINTTerminalRuleCall_3_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_4() { return cAsteriskKeyword_4; }
		
		//height=INT
		public Assignment getHeightAssignment_5() { return cHeightAssignment_5; }
		
		//INT
		public RuleCall getHeightINTTerminalRuleCall_5_0() { return cHeightINTTerminalRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class SizeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.sizeValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cWidthAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cWidthINTTerminalRuleCall_0_0 = (RuleCall)cWidthAssignment_0.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHeightAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHeightINTTerminalRuleCall_2_0 = (RuleCall)cHeightAssignment_2.eContents().get(0);
		
		//sizeValue:
		//	width=INT '*' height=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//width=INT '*' height=INT
		public Group getGroup() { return cGroup; }
		
		//width=INT
		public Assignment getWidthAssignment_0() { return cWidthAssignment_0; }
		
		//INT
		public RuleCall getWidthINTTerminalRuleCall_0_0() { return cWidthINTTerminalRuleCall_0_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
		
		//height=INT
		public Assignment getHeightAssignment_2() { return cHeightAssignment_2; }
		
		//INT
		public RuleCall getHeightINTTerminalRuleCall_2_0() { return cHeightINTTerminalRuleCall_2_0; }
	}
	public class SizeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.SizeExpression");
		private final Assignment cSizeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSizeSizeDeclarationCrossReference_0 = (CrossReference)cSizeAssignment.eContents().get(0);
		private final RuleCall cSizeSizeDeclarationIDTerminalRuleCall_0_1 = (RuleCall)cSizeSizeDeclarationCrossReference_0.eContents().get(1);
		
		//SizeExpression:
		//	size=[SizeDeclaration];
		@Override public ParserRule getRule() { return rule; }
		
		//size=[SizeDeclaration]
		public Assignment getSizeAssignment() { return cSizeAssignment; }
		
		//[SizeDeclaration]
		public CrossReference getSizeSizeDeclarationCrossReference_0() { return cSizeSizeDeclarationCrossReference_0; }
		
		//ID
		public RuleCall getSizeSizeDeclarationIDTerminalRuleCall_0_1() { return cSizeSizeDeclarationIDTerminalRuleCall_0_1; }
	}
	public class PrimaryColourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.primaryColour");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cColourExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColourValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//primaryColour:
		//	ColourExpression | colourValue;
		@Override public ParserRule getRule() { return rule; }
		
		//ColourExpression | colourValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ColourExpression
		public RuleCall getColourExpressionParserRuleCall_0() { return cColourExpressionParserRuleCall_0; }
		
		//colourValue
		public RuleCall getColourValueParserRuleCall_1() { return cColourValueParserRuleCall_1; }
	}
	public class ColourValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.colourValue");
		private final Assignment cColourAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cColourSTRINGTerminalRuleCall_0 = (RuleCall)cColourAssignment.eContents().get(0);
		
		//colourValue:
		//	colour=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//colour=STRING
		public Assignment getColourAssignment() { return cColourAssignment; }
		
		//STRING
		public RuleCall getColourSTRINGTerminalRuleCall_0() { return cColourSTRINGTerminalRuleCall_0; }
	}
	public class ColourRGBElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.ColourRGB");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColourKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRgbAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cRgbLeftParenthesisKeyword_4_0 = (Keyword)cRgbAssignment_4.eContents().get(0);
		private final Assignment cRedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRedINTTerminalRuleCall_5_0 = (RuleCall)cRedAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cGreenAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cGreenINTTerminalRuleCall_7_0 = (RuleCall)cGreenAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cBlueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBlueINTTerminalRuleCall_9_0 = (RuleCall)cBlueAssignment_9.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//ColourRGB:
		//	'Custom' 'colour' name=ID '=' rgb='(' red=INT ',' green=INT ',' blue=INT ')' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Custom' 'colour' name=ID '=' rgb='(' red=INT ',' green=INT ',' blue=INT ')' ';'
		public Group getGroup() { return cGroup; }
		
		//'Custom'
		public Keyword getCustomKeyword_0() { return cCustomKeyword_0; }
		
		//'colour'
		public Keyword getColourKeyword_1() { return cColourKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//rgb='('
		public Assignment getRgbAssignment_4() { return cRgbAssignment_4; }
		
		//'('
		public Keyword getRgbLeftParenthesisKeyword_4_0() { return cRgbLeftParenthesisKeyword_4_0; }
		
		//red=INT
		public Assignment getRedAssignment_5() { return cRedAssignment_5; }
		
		//INT
		public RuleCall getRedINTTerminalRuleCall_5_0() { return cRedINTTerminalRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//green=INT
		public Assignment getGreenAssignment_7() { return cGreenAssignment_7; }
		
		//INT
		public RuleCall getGreenINTTerminalRuleCall_7_0() { return cGreenINTTerminalRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//blue=INT
		public Assignment getBlueAssignment_9() { return cBlueAssignment_9; }
		
		//INT
		public RuleCall getBlueINTTerminalRuleCall_9_0() { return cBlueINTTerminalRuleCall_9_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
		
		//';'
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}
	public class ColourExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.ColourExpression");
		private final Assignment cColourAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cColourColourRGBCrossReference_0 = (CrossReference)cColourAssignment.eContents().get(0);
		private final RuleCall cColourColourRGBIDTerminalRuleCall_0_1 = (RuleCall)cColourColourRGBCrossReference_0.eContents().get(1);
		
		//ColourExpression:
		//	colour=[ColourRGB];
		@Override public ParserRule getRule() { return rule; }
		
		//colour=[ColourRGB]
		public Assignment getColourAssignment() { return cColourAssignment; }
		
		//[ColourRGB]
		public CrossReference getColourColourRGBCrossReference_0() { return cColourColourRGBCrossReference_0; }
		
		//ID
		public RuleCall getColourColourRGBIDTerminalRuleCall_0_1() { return cColourColourRGBIDTerminalRuleCall_0_1; }
	}
	public class ContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.Content");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryStringParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cContentLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cSeparatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cSeparatorAlternatives_1_1_0 = (Alternatives)cSeparatorAssignment_1_1.eContents().get(0);
		private final Keyword cSeparatorPlusSignKeyword_1_1_0_0 = (Keyword)cSeparatorAlternatives_1_1_0.eContents().get(0);
		private final Keyword cSeparatorCommaKeyword_1_1_0_1 = (Keyword)cSeparatorAlternatives_1_1_0.eContents().get(1);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightPrimaryStringParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		//Content:
		//	primaryString ({Content.left=current} separator+=('+' | ',') right+=primaryString)*;
		@Override public ParserRule getRule() { return rule; }
		
		//primaryString ({Content.left=current} separator+=('+' | ',') right+=primaryString)*
		public Group getGroup() { return cGroup; }
		
		//primaryString
		public RuleCall getPrimaryStringParserRuleCall_0() { return cPrimaryStringParserRuleCall_0; }
		
		//({Content.left=current} separator+=('+' | ',') right+=primaryString)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Content.left=current}
		public Action getContentLeftAction_1_0() { return cContentLeftAction_1_0; }
		
		//separator+=('+' | ',')
		public Assignment getSeparatorAssignment_1_1() { return cSeparatorAssignment_1_1; }
		
		//('+' | ',')
		public Alternatives getSeparatorAlternatives_1_1_0() { return cSeparatorAlternatives_1_1_0; }
		
		//'+'
		public Keyword getSeparatorPlusSignKeyword_1_1_0_0() { return cSeparatorPlusSignKeyword_1_1_0_0; }
		
		//','
		public Keyword getSeparatorCommaKeyword_1_1_0_1() { return cSeparatorCommaKeyword_1_1_0_1; }
		
		//right+=primaryString
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }
		
		//primaryString
		public RuleCall getRightPrimaryStringParserRuleCall_1_2_0() { return cRightPrimaryStringParserRuleCall_1_2_0; }
	}
	public class PrimaryStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.primaryString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//primaryString:
		//	stringValue | stringReference;
		@Override public ParserRule getRule() { return rule; }
		
		//stringValue | stringReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//stringValue
		public RuleCall getStringValueParserRuleCall_0() { return cStringValueParserRuleCall_0; }
		
		//stringReference
		public RuleCall getStringReferenceParserRuleCall_1() { return cStringReferenceParserRuleCall_1; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.stringValue");
		private final Assignment cValAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValSTRINGTerminalRuleCall_0 = (RuleCall)cValAssignment.eContents().get(0);
		
		//stringValue:
		//	val=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//val=STRING
		public Assignment getValAssignment() { return cValAssignment; }
		
		//STRING
		public RuleCall getValSTRINGTerminalRuleCall_0() { return cValSTRINGTerminalRuleCall_0; }
	}
	public class StringReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.stringReference");
		private final Assignment cStringreferenceAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cStringreferenceStringDeclarationCrossReference_0 = (CrossReference)cStringreferenceAssignment.eContents().get(0);
		private final RuleCall cStringreferenceStringDeclarationIDTerminalRuleCall_0_1 = (RuleCall)cStringreferenceStringDeclarationCrossReference_0.eContents().get(1);
		
		//stringReference:
		//	stringreference=[stringDeclaration];
		@Override public ParserRule getRule() { return rule; }
		
		//stringreference=[stringDeclaration]
		public Assignment getStringreferenceAssignment() { return cStringreferenceAssignment; }
		
		//[stringDeclaration]
		public CrossReference getStringreferenceStringDeclarationCrossReference_0() { return cStringreferenceStringDeclarationCrossReference_0; }
		
		//ID
		public RuleCall getStringreferenceStringDeclarationIDTerminalRuleCall_0_1() { return cStringreferenceStringDeclarationIDTerminalRuleCall_0_1; }
	}
	public class StringDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare.stringDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHightlightWordKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFontColourKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cFontColorAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cFontColorPrimaryColourParserRuleCall_3_2_0 = (RuleCall)cFontColorAssignment_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFontSizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cFontSizeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cFontSizeINTTerminalRuleCall_4_2_0 = (RuleCall)cFontSizeAssignment_4_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cWordAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cWordSTRINGTerminalRuleCall_7_0 = (RuleCall)cWordAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//stringDeclaration:
		//	'Hightlight-word' name=ID '<' ('Font-colour' '=' fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)?
		//	'>'
		//	'=' word=STRING ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'Hightlight-word' name=ID '<' ('Font-colour' '=' fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)?
		//'>'
		//'=' word=STRING ';'
		public Group getGroup() { return cGroup; }
		
		//'Hightlight-word'
		public Keyword getHightlightWordKeyword_0() { return cHightlightWordKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//('Font-colour' '=' fontColor=primaryColour ','?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Font-colour'
		public Keyword getFontColourKeyword_3_0() { return cFontColourKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//fontColor=primaryColour
		public Assignment getFontColorAssignment_3_2() { return cFontColorAssignment_3_2; }
		
		//primaryColour
		public RuleCall getFontColorPrimaryColourParserRuleCall_3_2_0() { return cFontColorPrimaryColourParserRuleCall_3_2_0; }
		
		//','?
		public Keyword getCommaKeyword_3_3() { return cCommaKeyword_3_3; }
		
		//('Font-size' '=' fontSize=INT ','?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Font-size'
		public Keyword getFontSizeKeyword_4_0() { return cFontSizeKeyword_4_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4_1() { return cEqualsSignKeyword_4_1; }
		
		//fontSize=INT
		public Assignment getFontSizeAssignment_4_2() { return cFontSizeAssignment_4_2; }
		
		//INT
		public RuleCall getFontSizeINTTerminalRuleCall_4_2_0() { return cFontSizeINTTerminalRuleCall_4_2_0; }
		
		//','?
		public Keyword getCommaKeyword_4_3() { return cCommaKeyword_4_3; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_5() { return cGreaterThanSignKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//word=STRING
		public Assignment getWordAssignment_7() { return cWordAssignment_7; }
		
		//STRING
		public RuleCall getWordSTRINGTerminalRuleCall_7_0() { return cWordSTRINGTerminalRuleCall_7_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	
	
	private final WebPageElements pWebPage;
	private final PageElementElements pPageElement;
	private final HeadElements pHead;
	private final HeadElementElements pHeadElement;
	private final TitleElements pTitle;
	private final LabelElements pLabel;
	private final BodyElements pBody;
	private final BodyElementElements pBodyElement;
	private final HeadingElements pHeading;
	private final LinkElements pLink;
	private final PictureElements pPicture;
	private final TextElements pText;
	private final SectionElements pSection;
	private final LocationexpressionElements pLocationexpression;
	private final PrimarySizeElements pPrimarySize;
	private final SizeDeclarationElements pSizeDeclaration;
	private final SizeValueElements pSizeValue;
	private final SizeExpressionElements pSizeExpression;
	private final PrimaryColourElements pPrimaryColour;
	private final ColourValueElements pColourValue;
	private final ColourRGBElements pColourRGB;
	private final ColourExpressionElements pColourExpression;
	private final ContentElements pContent;
	private final PrimaryStringElements pPrimaryString;
	private final StringValueElements pStringValue;
	private final StringReferenceElements pStringReference;
	private final StringDeclarationElements pStringDeclaration;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PageGeneratorLanguareGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWebPage = new WebPageElements();
		this.pPageElement = new PageElementElements();
		this.pHead = new HeadElements();
		this.pHeadElement = new HeadElementElements();
		this.pTitle = new TitleElements();
		this.pLabel = new LabelElements();
		this.pBody = new BodyElements();
		this.pBodyElement = new BodyElementElements();
		this.pHeading = new HeadingElements();
		this.pLink = new LinkElements();
		this.pPicture = new PictureElements();
		this.pText = new TextElements();
		this.pSection = new SectionElements();
		this.pLocationexpression = new LocationexpressionElements();
		this.pPrimarySize = new PrimarySizeElements();
		this.pSizeDeclaration = new SizeDeclarationElements();
		this.pSizeValue = new SizeValueElements();
		this.pSizeExpression = new SizeExpressionElements();
		this.pPrimaryColour = new PrimaryColourElements();
		this.pColourValue = new ColourValueElements();
		this.pColourRGB = new ColourRGBElements();
		this.pColourExpression = new ColourExpressionElements();
		this.pContent = new ContentElements();
		this.pPrimaryString = new PrimaryStringElements();
		this.pStringValue = new StringValueElements();
		this.pStringReference = new StringReferenceElements();
		this.pStringDeclaration = new StringDeclarationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("uk.ac.kcl.mdd.cw2.pageGenerator.PageGeneratorLanguare".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//WebPage:
	//	pageElements+=pageElement*;
	public WebPageElements getWebPageAccess() {
		return pWebPage;
	}
	
	public ParserRule getWebPageRule() {
		return getWebPageAccess().getRule();
	}
	
	//pageElement:
	//	SizeDeclaration | ColourRGB | Body | Head | stringDeclaration;
	public PageElementElements getPageElementAccess() {
		return pPageElement;
	}
	
	public ParserRule getPageElementRule() {
		return getPageElementAccess().getRule();
	}
	
	//Head:
	//	{Head}
	//	'Head' '{'
	//	headElements+=headElement*
	//	'}';
	public HeadElements getHeadAccess() {
		return pHead;
	}
	
	public ParserRule getHeadRule() {
		return getHeadAccess().getRule();
	}
	
	//headElement:
	//	Title | Label;
	public HeadElementElements getHeadElementAccess() {
		return pHeadElement;
	}
	
	public ParserRule getHeadElementRule() {
		return getHeadElementAccess().getRule();
	}
	
	//Title:
	//	'Title' '=' name=STRING ';';
	public TitleElements getTitleAccess() {
		return pTitle;
	}
	
	public ParserRule getTitleRule() {
		return getTitleAccess().getRule();
	}
	
	//Label:
	//	'Description' '=' name=STRING ',' 'lable' '=' label=STRING ';';
	public LabelElements getLabelAccess() {
		return pLabel;
	}
	
	public ParserRule getLabelRule() {
		return getLabelAccess().getRule();
	}
	
	//Body:
	//	{Body}
	//	'Body' '{'
	//	bodyElements+=bodyElement*
	//	'}';
	public BodyElements getBodyAccess() {
		return pBody;
	}
	
	public ParserRule getBodyRule() {
		return getBodyAccess().getRule();
	}
	
	//bodyElement:
	//	Heading | Link | Text | Picture | Section | SizeDeclaration | ColourRGB | stringDeclaration;
	public BodyElementElements getBodyElementAccess() {
		return pBodyElement;
	}
	
	public ParserRule getBodyElementRule() {
		return getBodyElementAccess().getRule();
	}
	
	//Heading:
	//	'Heading' name=ID '<'
	//	'index' '=' index=INT ','? ('Font-colour' '=' fontColor=primaryColour ','?)? ('Location' '='
	//	location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? (
	//	'Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
	//	'>'
	//	'=' title=STRING ';';
	public HeadingElements getHeadingAccess() {
		return pHeading;
	}
	
	public ParserRule getHeadingRule() {
		return getHeadingAccess().getRule();
	}
	
	//Link:
	//	'Link' name=ID '<' ('target' '=' target=STRING ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '='
	//	Rpadding=INT ','?)? ('Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)? ('Font-colour' '='
	//	fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)? ('Location' '=' location=locationexpression ','?)?
	//	'>'
	//	'=' url=STRING ';';
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//Picture:
	//	'Picture' name=ID '<' ('size' '=' size=primarySize ','?)? ('alternative-text' '=' alt=STRING ','?)? ('Location' '='
	//	location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? (
	//	'Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
	//	'>'
	//	'=' picUrl=STRING ','? ';';
	public PictureElements getPictureAccess() {
		return pPicture;
	}
	
	public ParserRule getPictureRule() {
		return getPictureAccess().getRule();
	}
	
	//Text:
	//	'Text' name=ID '<' ('Font-colour' '=' fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)? ('Location'
	//	'=' location=locationexpression ','?)? ('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)
	//	? ('Padding-top' '=' Tpadding=INT ','?)? ('Padding-bottom' '=' Bpadding=INT ','?)?
	//	'>'
	//	'=' content=Content ';';
	public TextElements getTextAccess() {
		return pText;
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}
	
	//Section:
	//	'Section' name=ID '<' ('Background-Colour' '=' bgColor=primaryColour ','?)? ('Size' '=' size=primarySize ','?)? (
	//	'Section-location' '=' location=locationexpression ','?)? ('Text-location' '=' textLocation=locationexpression ','?)?
	//	('Padding-left' '=' Lpadding=INT ','?)? ('Padding-right' '=' Rpadding=INT ','?)? ('Padding-top' '=' Tpadding=INT ','?)
	//	? ('Padding-bottom' '=' Bpadding=INT ','?)?
	//	'>'
	//	'{'
	//	bodyElements+=bodyElement+
	//	'}';
	public SectionElements getSectionAccess() {
		return pSection;
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}
	
	//locationexpression:
	//	location=STRING;
	public LocationexpressionElements getLocationexpressionAccess() {
		return pLocationexpression;
	}
	
	public ParserRule getLocationexpressionRule() {
		return getLocationexpressionAccess().getRule();
	}
	
	//primarySize:
	//	SizeExpression | sizeValue;
	public PrimarySizeElements getPrimarySizeAccess() {
		return pPrimarySize;
	}
	
	public ParserRule getPrimarySizeRule() {
		return getPrimarySizeAccess().getRule();
	}
	
	//SizeDeclaration:
	//	'size' name=ID '=' width=INT '*' height=INT ';';
	public SizeDeclarationElements getSizeDeclarationAccess() {
		return pSizeDeclaration;
	}
	
	public ParserRule getSizeDeclarationRule() {
		return getSizeDeclarationAccess().getRule();
	}
	
	//sizeValue:
	//	width=INT '*' height=INT;
	public SizeValueElements getSizeValueAccess() {
		return pSizeValue;
	}
	
	public ParserRule getSizeValueRule() {
		return getSizeValueAccess().getRule();
	}
	
	//SizeExpression:
	//	size=[SizeDeclaration];
	public SizeExpressionElements getSizeExpressionAccess() {
		return pSizeExpression;
	}
	
	public ParserRule getSizeExpressionRule() {
		return getSizeExpressionAccess().getRule();
	}
	
	//primaryColour:
	//	ColourExpression | colourValue;
	public PrimaryColourElements getPrimaryColourAccess() {
		return pPrimaryColour;
	}
	
	public ParserRule getPrimaryColourRule() {
		return getPrimaryColourAccess().getRule();
	}
	
	//colourValue:
	//	colour=STRING;
	public ColourValueElements getColourValueAccess() {
		return pColourValue;
	}
	
	public ParserRule getColourValueRule() {
		return getColourValueAccess().getRule();
	}
	
	//ColourRGB:
	//	'Custom' 'colour' name=ID '=' rgb='(' red=INT ',' green=INT ',' blue=INT ')' ';';
	public ColourRGBElements getColourRGBAccess() {
		return pColourRGB;
	}
	
	public ParserRule getColourRGBRule() {
		return getColourRGBAccess().getRule();
	}
	
	//ColourExpression:
	//	colour=[ColourRGB];
	public ColourExpressionElements getColourExpressionAccess() {
		return pColourExpression;
	}
	
	public ParserRule getColourExpressionRule() {
		return getColourExpressionAccess().getRule();
	}
	
	//Content:
	//	primaryString ({Content.left=current} separator+=('+' | ',') right+=primaryString)*;
	public ContentElements getContentAccess() {
		return pContent;
	}
	
	public ParserRule getContentRule() {
		return getContentAccess().getRule();
	}
	
	//primaryString:
	//	stringValue | stringReference;
	public PrimaryStringElements getPrimaryStringAccess() {
		return pPrimaryString;
	}
	
	public ParserRule getPrimaryStringRule() {
		return getPrimaryStringAccess().getRule();
	}
	
	//stringValue:
	//	val=STRING;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	//stringReference:
	//	stringreference=[stringDeclaration];
	public StringReferenceElements getStringReferenceAccess() {
		return pStringReference;
	}
	
	public ParserRule getStringReferenceRule() {
		return getStringReferenceAccess().getRule();
	}
	
	//stringDeclaration:
	//	'Hightlight-word' name=ID '<' ('Font-colour' '=' fontColor=primaryColour ','?)? ('Font-size' '=' fontSize=INT ','?)?
	//	'>'
	//	'=' word=STRING ';';
	public StringDeclarationElements getStringDeclarationAccess() {
		return pStringDeclaration;
	}
	
	public ParserRule getStringDeclarationRule() {
		return getStringDeclarationAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
